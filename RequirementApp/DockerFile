# Build Stage
FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build
WORKDIR /src

# Copy only the necessary files for restoring dependencies
COPY *.sln .
COPY MK.RequirementsApp.Application/*.csproj ./MK.RequirementsApp.Application/
COPY MK.RequirementsApp.Infrastructure/*.csproj ./MK.RequirementsApp.Infrastructure/
COPY MK.RequirementsApp.Domain/*.csproj ./MK.RequirementsApp.Domain/
COPY MK.RequirementsApp.WebAPI/*.csproj ./MK.RequirementsApp.WebAPI/

# Restore dependencies
RUN dotnet restore

# Copy the entire solution
COPY . .

# Build the solution
RUN dotnet build -c Release

# Run database migrations
WORKDIR /src/MK.RequirementsApp.Infrastructure
RUN rm -rf Migrations  # Remove existing migration folder if it exists
RUN dotnet ef migrations add InitialMigration -c YourDbContext -o Migrations --project MK.RequirementsApp.Infrastructure
RUN dotnet ef database update -c YourDbContext --project MK.RequirementsApp.Infrastructure

# Publish Stage
FROM build AS publish
WORKDIR /src/MK.RequirementsApp.WebAPI
RUN dotnet publish -c Release -o /app/publish

# Final Stage
FROM mcr.microsoft.com/dotnet/aspnet:7.0 AS final
WORKDIR /app
COPY --from=publish /app/publish .

# Expose the port the app will run on
EXPOSE 5000
EXPOSE 5001

# Command to run the application
ENTRYPOINT ["dotnet", "MK.RequirementsApp.WebAPI.dll"]